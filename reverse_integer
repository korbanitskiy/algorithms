"""
Given a signed 32-bit integer x, return x with its digits reversed.
If reversing x causes the value to go outside the signed 32-bit integer range [-2^31, 2^31 - 1], then return 0

Example 1:
Input: x = 123
Output: 321

Example 2:
Input: x = -123
Output: -321

Example 3:
Input: x = 120
Output: 21

Example 4:
Input: x = 0
Output: 0
"""


def reverse_integer_str(x):
    reversed_value = int(str(abs(x))[::-1])

    if x < 0:
        reversed_value = -reversed_value
    return reversed_value * (-2 ** 31 <= reversed_value <= 2 ** 31 - 1)


    reversed_int = int(''.join(reversed(str(abs(x)))))
    if not -2**31 <= reversed_int <=2**31 - 1:
        return 0

    if x < 0:
        return -1 * reversed_int

    return reversed_int
    
    
def reverse_integer_int(x):
    is_positive = x > 0
    x = abs(x)
    result = 0
    while x > 0:
        result = result * 10 + x % 10
        x = x // 10

    if result <= 2**31 - 1:
        return result if is_positive else -result

    return 0


if __name__ == "__main__":
    print(reverse_integer(123))
    print(reverse_integer(-123))
    print(reverse_integer(120))
    print(reverse_integer(0))
